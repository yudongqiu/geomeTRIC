language: python

# Run jobs on container-based infrastructure, can be overridden per job
dist: trusty

matrix:
  include:
    - os: linux
      python: 2.7
      env:
        - PYTHON_VER=2.7
        - PROG=RDKIT
    - os: linux
      python: 3.5
      env:
        - PYTHON_VER=3.5
        - PROG=RDKIT
    - os: linux
      python: 3.6
      env:
        - PYTHON_VER=3.6
        - PROG=PSI4
    - os: linux
      python: 3.5
      env:
        - PYTHON_VER=3.5
        - PROG=LATEST
  allowed_failures:
    - os: linux
      python: 3.5
      env:
        - PYTHON_VER=3.5
        - PROG=LATEST

before_install:
    # Additional info about the build
  - uname -a
  - df -h
  - ulimit -a

    # Install the Python environemt
  - source devtools/travis-ci/before_install.sh
  - python -V

install:

    # Create test environment for package
  - |
    if [ $PROG == "RDKIT" ]; then
      conda env create -n test python=$PYTHON_VER -f devtools/conda-envs/rdkit.yaml
    elif [ $PROG == "PSI4" ]; then
      conda env create -n test python=$PYTHON_VER -f devtools/conda-envs/psi.yaml
    elif [ $PROG == "LATEST" ]; then
      conda env create -n test python=$PYTHON_VER -f devtools/conda-envs/latest.yaml
    else
      echo "ERROR: No match for PROG ($PROG)."
      exit 1
    fi
  - source activate test

    # Build and install package
  - python setup.py develop --no-deps

script:
  - pytest -v --cov=geometric geometric/tests/

    # Run a Psi4 command line test if possible
  - |
    if [ $PROG == "PSI4" ]; then
      cd examples/water2_psi4
      coverage run `which geometric-optimize` --psi4 water2.psi4in
      cd ../..
    fi

notifications:
    email: false

after_success:
  - codecov

# deploy:
#   provider: pypi
#   user: leeping
#   password:
#     secure: jfybbMD6ZVhuEmCHkAcW66M48zka2uSuJc+PzvAN1LgU1scqo6Ze+PZfvZtoci8x/oh8Iw3OB3/YaCqcf2sZaf9bOhf3CCFLzKF3hLds3Eiyrq53AX2naETuctbYqbPv+PIImjTMphb9QoaIqRCxNHHxGhnw098AbVv32PQ2oUQG6zS4gGjzyr5AFCZtHWJkBoFBpI8CXHmEZ/UkPHCBX1panpKh1CcNnkivmtbsV4enDL+ozvxBzSwlZ38+qddo8mspmOA++u5HfzyVfkhxFfogZbl2CB5mxqPgWIfoM++7qb+YLiWT1fPQCdzgp02RnWdB/qzd86BwYsSYZCigEswxiTlB0bhPGJxS2hEN74BFKvaCQkRq2emajSjGJxF8yEiBVs5ImzslJN0u55af3ANuO0Ev8BtL3pmHjuLzOr1/SXyhUh6HVWzH/Gk6iVvhbyxwLQq+dH9QHz60adABnhA84eMgVjawd/+Qzm8id5UU2i5RlA36xbmMTJm5RoybCD5LZ8y6knGwVCtm+mv8q/pJJMn1jkiCAMeS9PC2f1HoT0/02NXzim92ynTBNnRPu+uOo2r6Y9aaxfc8dh1VCRZpW9SzhQ0oz4HlB3VBzkbPlyAl4fkXPVJc+vd37qJvmI0/Cx/mNhRvf+AXDje/Mm8cw4QoY0dekjrRT4L0Cp8=
#   on:
#     tags: true
#     all_branches : true
